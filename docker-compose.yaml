services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=paymentuser
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=paymentdb
      - DB_SSLMODE=disable
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - LOG_LEVEL=info
      - LOG_FORMAT=json
      - METRICS_ENABLED=true
      - METRICS_PORT=9090
    depends_on:
      - db
    networks:
      - payment-network
    command: ["/usr/local/bin/wait-for-it.sh", "db:5432", "--", "./main"]

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=paymentuser
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=paymentdb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - payment-network

  swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
      - "8081:8080"
    volumes:
      - ./api/openapi:/usr/share/nginx/html/api
    environment:
      - SWAGGER_JSON=/usr/share/nginx/html/api/api.yaml
    networks:
      - payment-network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - payment-network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - payment-network

networks:
  payment-network:
    driver: bridge

volumes:
  postgres-data:
  grafana-data: